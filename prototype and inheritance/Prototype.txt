原型链是一种机制，指的是JavaScript每个对象， 包括原型对象， 都有一个内置的[[proto]]属性指向创建它的函数对象的原型对象，即prototype属性。
原型链的存在，主要是为了继承

1. 在JS 中，函数即对象
2. 定义一个函数的时候，会包含一个预定的属性，prototype, 这个属性称之为原型对象
  functions are both objects and functions. As soon as you declare a function, immediately it also is an object, 
  prototype is nothing more than a regular property on the function in its object format. the prototype is actually an     object,here that we want to put all the functions in.

  if we don't use new, this refers to the window object
  every function has a function-object combo. this is a little like function parameter, when we create the object, we have a    totally different this.this refers to the right object at the right moment.

  when call a function at the right side of dot, it will automatically as soon as that function gets called, its execution   context opens, this will point to the left side of the dot.
  arrow function has one difference: this inside its execution context is going to refer to whatever this was when it was   defined


3. js 在创建对象的时候，都会有一个[[proto]] 的内置属性，指向它的函数对象的prototype. 原型对象也有[[proto]], 因此在不断地指向中，形成了原型链
4. 当用new 去执行构造函数时，相当于执行了
           var o = {};
           o.__proto__ = F.prototype;
           f.call(o);

5. constructor
原型对象prototype上都有个 预定义的constructor 属性，用来指向函数对象，这是一种循环引用

我的理解，每次需要重新创造的东西放在 constructor 里，inheritance 链里面保持稳定不动的 放在 prototype 里面
in JS, it is prototypy based language, the ES6 class is syntax sugar for prototype

new VS Object.create vs class
https://stackoverflow.com/questions/4166616/understanding-the-difference-between-object-create-and-new-somefunction
https://www.toptal.com/javascript/es6-class-chaos-keeps-js-developer-up

what is constructor in ES6 class?
https://www.educative.io/edpresso/what-is-a-constructor-in-javascript
constructor method is a special method of a class for creating and initialization an object of that class.
In JavaScript, here’s what happens when a constructor is invoked:
1. A new empty object is created
2. this keyword starts referring to that newly created object and hence it becomes the current instance object
3. The newly created object is then returned as the constructor’s returned value
In JavaScript, if you don’t specify any constructor, a default constructor is automatically 
created which has no parameters: constructor()
inheritance? 
ES6 class?
Classes are a template for creating objects. They encapsulate data with code to work on that data.
js load

